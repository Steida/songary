// Remember to use rems and ems. http://css-tricks.com/rems-ems.

@import '../../../node_modules/normalize.css/normalize.css'

// http://phonegap-tips.com/articles/essential-phonegap-css-webkit-tap-highlight-color.html
*
  -webkit-tap-highlight-color rgba(0,0,0,0)

// Goodness.
*, ::after, ::before
  box-sizing border-box

html,
body
  background-color #fff
  height 100%

body {
  color #333
  font-family 'Segoe UI', 'Lucida Grande','Ubuntu','sans-serif'
  font-size 16px
  line-height 1.5
}

#app
  margin 1em 2em

  :focus
    outline-style none

  a
    color #346392
    text-decoration none

    // Remember, ios has a hover problem. Solution is simple, just don't use
    // display nor visibility on hovered elements. We can't detect desktop nor
    // touch device reliably, so this is the only sane approach.
    // Don't even think about mouseDown or touchStart to detect "pressed"
    // element, since it's brittle as hell. To highligh user action, we can use
    // .active or implement custom highlight.
    // https://www.nczonline.net/blog/2012/07/05/ios-has-a-hover-problem
    // http://www.stucox.com/blog/you-cant-detect-a-touchscreen
    &:hover:not(.active)
      text-decoration underline

    &.active
      font-weight bold

  button
    background-color #6496c8
    border none
    border-radius 1em
    color #fff
    font-weight bold
    line-height 1.8
    margin 0 10px 0 0
    padding 0 1em
    text-shadow -1px 1px #417cb8

    &[disabled]
      opacity .5

    &:hover:not(&[disabled])
      background-color #346392
      text-shadow -1px 1px #27496d

    &:active
      background-color #27496d
      text-shadow -1px 1px #193047

  button
  input
  textarea
    &:disabled
      opacity .5

  p, li
    max-width 42em
